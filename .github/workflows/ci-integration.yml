name: CI - Integration tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-18-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-18-

      - name: Cache Prisma engines
        uses: actions/cache@v4
        with:
          path: ~/.cache/prisma
          key: ${{ runner.os }}-prisma-${{ hashFiles('**/prisma/schema*.prisma') }}
          restore-keys: |
            ${{ runner.os }}-prisma-

      - name: Install dependencies
        run: npm ci

      - name: Run lint
        run: npm run lint

      - name: Build
        run: npm run build

  integration:
    needs: validate
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20]
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-

      - name: Cache Prisma engines
        uses: actions/cache@v4
        with:
          path: ~/.cache/prisma
          key: ${{ runner.os }}-prisma-${{ hashFiles('**/prisma/schema*.prisma') }}
          restore-keys: |
            ${{ runner.os }}-prisma-

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma client (test schema)
        env:
          TEST_DATABASE_URL: file:./dev-test.db
        run: npx prisma generate --schema=prisma/schema.test.prisma

      - name: Push test DB schema (SQLite)
        env:
          TEST_DATABASE_URL: file:./dev-test.db
        run: npx prisma db push --schema=prisma/schema.test.prisma

      - name: Run tests (Vitest)
        env:
          TEST_DATABASE_URL: file:./dev-test.db
          CI: true
        run: npx vitest --run --reporter junit --outputFile test-results/junit.xml

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: vitest-junit
          path: test-results/junit.xml
